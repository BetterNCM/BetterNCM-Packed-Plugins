name: "Pack Plugins"

on:
  workflow_dispatch: # 手动触发
  schedule:
    - cron: "0 0,12 * * *"

permissions:
  contents: write
  actions: read

concurrency:
  group: "pack-plugins"
  cancel-in-progress: true

jobs:
  pre-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      should_pack: ${{ steps.check.outputs.should_pack }}
      latest_commit: ${{ steps.get-latest-commit.outputs.latest_commit }}
      latest_commit_msg: ${{ steps.get-latest-commit.outputs.latest_commit_msg }}
    steps:
      - name: Checkout release repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Check out source repo
        uses: actions/checkout@v4
        with:
          repository: "BetterNCM/BetterNCM-Plugins"
          path: "source"
          fetch-depth: 0

      - name: Get source latest commit
        id: get-latest-commit
        run: |
          set -euo pipefail
          cd source
          # Ensure the tracked path exists in the source repo; fail early and log if missing
          if [ ! -e plugins-data ]; then
            echo "❌ Path 'plugins-data' not found in source repo." >&2
            exit 1
          fi
          LATEST_COMMIT=$(git log -1 --format="%H" -- plugins-data)
          # sanitize commit message to remove newlines/carriage returns
          LATEST_COMMIT_MSG=$(git log -1 --format="%s" -- plugins-data | tr '\n' ' ' | sed 's/\r//g')
          echo "latest_commit=${LATEST_COMMIT}" >> $GITHUB_OUTPUT
          echo "latest_commit_msg=${LATEST_COMMIT_MSG}" >> $GITHUB_OUTPUT
          echo "Latest commit: ${LATEST_COMMIT}"
          echo "Latest commit message: ${LATEST_COMMIT_MSG}"
          cd ..
      
      - name: Get last sync commit
        id: get-last-sync
        run: |
          if [ -f .last-sync-commit ]; then
            LAST_SYNC_COMMIT=$(cat .last-sync-commit)
            echo "last_sync_commit=$LAST_SYNC_COMMIT" >> $GITHUB_OUTPUT
            echo "✅Last sync commit: $LAST_SYNC_COMMIT"
          else
            echo "last_sync_commit=" >> $GITHUB_OUTPUT
            echo "⚠️No last sync commit found."
          fi
      
      - name: Check if packing is needed
        id: check
        run: |
          if [ "${{ steps.get-latest-commit.outputs.latest_commit }}" != "${{ steps.get-last-sync.outputs.last_sync_commit }}" ]; then
            echo "should_pack=true" >> $GITHUB_OUTPUT
            echo "✅Changes detected, packing needed."
          else
            echo "should_pack=false" >> $GITHUB_OUTPUT
            echo "❌No changes detected, skipping packing."
          fi
  pack-and-push:
    needs: pre-check
    if: needs.pre-check.outputs.should_pack == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Check out source repo
        uses: actions/checkout@v4
        with:
          repository: "BetterNCM/BetterNCM-Plugins"
          path: "plugins"
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: 'plugins/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: plugins/scripts

      - name: Run pack script
        timeout-minutes: 10
        run: node pack-plugins
        id: pack
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: plugins/scripts/pack-plugins

      - name: Checkout release repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          path: release

      - name: Copy files
        run: |
          set -euo pipefail
          # ensure packaged output directory exists and is not empty
          if [ ! -d plugins/tmp ]; then
            echo "❌ plugins/tmp directory does not exist." >&2
            exit 1
          fi
          if [ -z "$(ls -A plugins/tmp)" ]; then
            echo "❌ plugins/tmp is empty; no packaged files produced." >&2
            exit 1
          fi
          # copy contents safely (preserve attributes)
          cp -a plugins/tmp/. release/

      - name: Update last sync commit
        run: |
          set -euo pipefail
          echo "${{ needs.pre-check.outputs.latest_commit }}" > .last-sync-commit
          cp .last-sync-commit ./release/

      - name: Commit and push files
        run: |
          set -euo pipefail
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          # If there are no staged changes, fail with a clear message
          if git diff --cached --quiet; then
            echo "❌ No changes to commit in release repo." >&2
            exit 1
          fi
          # sanitize commit message to avoid newlines
          COMMIT_MSG="${{ needs.pre-check.outputs.latest_commit_msg }}"
          COMMIT_HASH="${{ needs.pre-check.outputs.latest_commit }}"
          COMMIT_MSG_OUT=$(echo "$COMMIT_MSG" | tr '\n' ' ' | sed 's/\r//g')
          COMMIT_HASH_SHORT=$(echo "$COMMIT_HASH" | cut -c1-7)
          git commit -m "Update - $COMMIT_MSG_OUT - $COMMIT_HASH_SHORT"
          git push
          echo "✅ Pushed updates to release repo."
        working-directory: release